# coding: utf-8

"""
    fluid

    client for fluid  # noqa: E501

    The version of the OpenAPI document: v0.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import fluid
from fluid.models.tiered_store import TieredStore  # noqa: E501
from fluid.rest import ApiException

class TestTieredStore(unittest.TestCase):
    """TieredStore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TieredStore
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = fluid.models.tiered_store.TieredStore()  # noqa: E501
        if include_optional :
            return TieredStore(
                levels = [
                    fluid.models./level..Level(
                        high = '0', 
                        low = '0', 
                        mediumtype = '0', 
                        path = '0', 
                        quota = None, 
                        quota_list = '0', 
                        volume_source = fluid.models./volume_source..VolumeSource(
                            aws_elastic_block_store = None, 
                            azure_disk = None, 
                            azure_file = None, 
                            cephfs = None, 
                            cinder = None, 
                            config_map = None, 
                            csi = None, 
                            downward_api = None, 
                            empty_dir = None, 
                            ephemeral = None, 
                            fc = None, 
                            flex_volume = None, 
                            flocker = None, 
                            gce_persistent_disk = None, 
                            git_repo = None, 
                            glusterfs = None, 
                            host_path = None, 
                            iscsi = None, 
                            nfs = None, 
                            persistent_volume_claim = None, 
                            photon_persistent_disk = None, 
                            portworx_volume = None, 
                            projected = None, 
                            quobyte = None, 
                            rbd = None, 
                            scale_io = None, 
                            secret = None, 
                            storageos = None, 
                            vsphere_volume = None, ), 
                        volume_type = '0', )
                    ]
            )
        else :
            return TieredStore(
        )

    def testTieredStore(self):
        """Test TieredStore"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
